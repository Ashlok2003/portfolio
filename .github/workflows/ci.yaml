name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  CI: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate cache key
        id: hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ needs.setup.outputs.cache-key }}
      - run: npm ci --prefer-offline
      - run: npm run lint -- --max-warnings=0
      - run: npx tsc --noEmit --skipLibCheck

  build:
    needs: [setup, lint]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}-${{ needs.setup.outputs.cache-key }}
      - run: npm ci --prefer-offline
      - run: npm run build
        env:
          NODE_ENV: production
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

  notify:
    needs: [build]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify status
        run: |
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "üéâ CI pipeline finished successfully!"
          else
            echo "‚ùå CI pipeline failed!"
            exit 1
          fi
